{
  // telemetry
  "telemetry.telemetryLevel": "off",
  "update.mode": "none",

  // looks
  "workbench.editor.enablePreview": false,
  "workbench.colorTheme": "One Dark Pro Darker",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.activityBar.visible": true,
  "workbench.startupEditor": "none",
  "window.menuBarVisibility": "toggle",
  "breadcrumbs.enabled": false,

  // editing
  "editor.fontFamily": "'Jetbrains Mono', 'Fira Code', 'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'",
  "editor.fontLigatures": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.lineNumbers": "relative",
  "editor.guides.bracketPairs": true,
  "editor.minimap.enabled": false,
  "editor.detectIndentation": false,
  "editor.tabSize": 2,
  "editor.insertSpaces": false,
  "editor.renderWhitespace": "all",
  "editor.fontSize": 13,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true
  },

  // files
  "files.autoSave": "onFocusChange",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },

  // others
  "explorer.confirmDelete": true,
  "debug.disassemblyView.showSourceCode": false,
  "terminal.integrated.env.linux": {},
  "terminal.integrated.defaultProfile.linux": "bash",
  "extensions.ignoreRecommendations": true,

  // vim
  "vim.useSystemClipboard": true,
  "vim.leader": "space",
  "vim.normalModeKeyBindingsNonRecursive": [
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },
    // working with windows
    {
      "before": ["leader", "w", "h"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      "before": ["leader", "w", "j"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["leader", "w", "k"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      "before": ["leader", "w", "l"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      "before": ["leader", "w", "d"],
      "commands": ["workbench.action.closeEditorsInGroup"]
    },
    // edit
    {
      "before": ["leader", "c"],
      "commands": ["editor.action.commentLine"]
    },
    {
      "before": ["leader", "s"],
      "commands": ["workbench.action.files.save"]
    },
    // change files
    {
      "before": ["leader", "leader"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["leader", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    // file tree
    {
      "before": ["leader", "t", "f"],
      "commands": ["workbench.explorer.fileView.focus"]
    },
    {
      "before": ["<leader>", "t", "t"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    // working with files
    {
      "before": ["<leader>", "f", "r"],
      "commands": ["fileutils.renameFile"]
    },
    {
      "before": ["<leader>", "f", "m"],
      "commands": ["fileutils.moveFile"]
    },
    {
      "before": ["<leader>", "f", "d"],
      "commands": ["fileutils.removeFile"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["leader", "c"],
      "commands": ["editor.action.commentLine"]
    }
  ],
  "vim.easymotion": true,
  "vim.foldfix": true,
  "vim.replaceWithRegister": true,
  "vim.smartRelativeLine": true,
  "vim.sneak": true,
  "vim.sneakReplacesF": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,

  // by extension
  "rest-client.enableTelemetry": false,
  "rest-client.environmentVariables": {
    "$shared": {}
  },
  "markdown-pdf.emoji": false,
  "markdown-pdf.margin.bottom": "1.5cm",
  "markdown-pdf.margin.left": "1.5cm",
  "markdown-pdf.margin.right": "1.5cm",
  "prettier.documentSelectors": ["\"**/*.svelte\""],
  "tailwindCSS.experimental.classRegex": [
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]
  ],
  "tailwindCSS.classAttributes": [
    "class",
    "className",
    "ngClass",
    ".*ClassName"
  ],
  "aws.telemetry": false,
  "aws.codeWhisperer.shareCodeWhispererContentWithAWS": false,
  "cssVariables.lookupFiles": [
    "**/*.css",
    "**/*.scss",
    "**/*.sass",
    "**/*.less",
    "node_modules/@mantine/core/styles.css"
  ],

  // by language/file-extenison
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "[ahk]": {
    "editor.defaultFormatter": "cweijan.vscode-autohotkey-plus"
  },
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "svelte.enable-ts-plugin": true,
  "go.toolsManagement.autoUpdate": true
}
